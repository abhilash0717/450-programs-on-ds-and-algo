// { Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    // Driver code
    public static void main(String[] args) throws Exception {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0) {
            String inputLine[] = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine[0]);
            int m = Integer.parseInt(inputLine[1]);
            int arr1[] = new int[n];
            int arr2[] = new int[m];
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr1[i] = Integer.parseInt(inputLine[i]);
            }
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < m; i++) {
                arr2[i] = Integer.parseInt(inputLine[i]);
            }

            new Solution().merge(arr1, arr2, n, m);

            StringBuffer str = new StringBuffer();
            for (int i = 0; i < n; i++) {
                str.append(arr1[i] + " ");
            }
            for (int i = 0; i < m; i++) {
                str.append(arr2[i] + " ");
            }
            System.out.println(str);
        }
    }
}// } Driver Code Ends


class Solution {

    public void merge(int arr1[], int arr2[], int n, int m) {
      
      int i=0,j=0,k=0;
      int[] temp = new int[n+m];
      while(i< n && j < m){
          if(arr1[i] < arr2[j]) temp[k++] = arr1[i++];
          else  temp[k++] = arr2[j++];
      }
      
        while (i < n) {
            temp[k++] = arr1[i++];
        }
        
        while (j < m) {
            temp[k++] = arr2[j++];
        }
        int x=0;
        for( x=0;x<n;x++){
            arr1[x] = temp[x];
        }
         for(int X=0;X<m;X++){
            arr2[X] = temp[x++];
        }
        
      /*
      //BRUTE FORCE
        int length = n+m;
        int pos = 0;
        int[] array = new int[length];
        for(int i:arr1){
            array[pos] = i;
            pos++;
        } 
        for(int I:arr2){
            array[pos] = I;
            pos++;
        }
       Arrays.sort(array);
       int idx = 0,idx1=0;
       for(int j=0;j<length;j++){
           if(j<n){
               arr1[idx] = array[j];
               idx++;
           }
           else {
               arr2[idx1] = array[j];
               idx1++;
           }
       }
       */
        //INSERTION SORT 
        /*
        N = 4, M = 5
        arr1[] = {1, 3, 5, 7}
        arr2[] = {0, 2, 6, 8, 9}
        Output: 0 1 2 3 5 6 7 8 9
        */
        /*
        
        int idx = 0;
        for(int i=0;i<n;i++){
            if(arr1[i] > arr2[idx]){
                int temp = arr1[i];
                arr1[i] = arr2[idx];
                arr2[idx] = temp;
               
               int first = arr2[0];
               
               int j;
               for(j=1;j<m && arr2[j]<first;j++){
                   arr2[j-1] = arr2[j];
               }
               arr2[j-1] = first;
            }
        }
        */
        
       }    
}
